Index:  - index là một cấu trúc dữ liệu nó dùng để tăng truy vẫn dữ liệu nhanh hơn so với cách thông thường thay vì tìm từng hàng thì index nó sẽ tìm ra hàng mà không cần quét toàn bộ bảng
        - Khi nào sử dụng index     + Khóa và cột có giá trị độc nhất 
                                    + Tần suất sử dụng 
                                    + Số lượng bản ghi của bảng
                                    + Dữ liệu của bảng tăng trưởng nhanh
                                    + Không gian bộ nhớ
        - Ưu điểm của việc sử dụng index
            + Thường sẽ làm tăng hiệu năng truy vấn khi điều kiện rơi vào các cột được đánh chỉ mục
            + Giúp ta có thể truy vấn dữ liệu nhanh hơn
            + Có thể được sử dụng để sắp xếp dữ liệu.
            + Các chỉ mục độc nhất đảm bảo tính duy nhất của trường trong cơ sở dữ liệu
        - Nhược điểm của sử dụng index.
            + Làm giảm hiệu năng các câu lệnh insert, update ,delete
            + Chiếm dụng bộ nhớ
Stored procedure:
    Là một tập hợp các câu lệnh SQL được lưu trữ trong CSDL và có thể gọi để thực thi nhiều lần.
    - Đặc điểm của Stored Procedure:
        + Có thể chứa các câu lệnh SELECT, INSERT, UPDATE, DELETE
        + Có thể nhận tham số đầu vào và trả về giá trị
        + Giúp tăng hiệu suất vì đã được biên dịch trước
        + Giảm trùng lặp code, giúp dễ bảo trì
    - Nhược điểm của Stored procedure:
        + Thiếu tính khả chuyển 
        + Hạn chế ngôn ngữ lập trình
    - Sử dụng Stored Procedure khi:
        + Thực hiện những phép toán phức tạp, lặp lại nhiều lần
        + Project đòi hỏi nghiêm ngặt về tốc độ thực thi 
Trigger :
    Là một thủ tục tự động thực thi khi có sự kiện xảy ra (INSERT, UPDATE, DELETE) trên một bảng cụ thể
    -  Đặc điểm của Trigger:
        + Tự động kích hoạt khi có thay đổi dữ liệu
        + Không thể gọi trực tiếp như Stored Procedure
        + Dùng để ràng buộc dữ liệu, ghi log thay đổi, hoặc kích hoạt xử lý tự động
    - Nhược điểm của Trigger
        + Khó kiểm soát và debug
        + Khó theo dõi khi có nhiều trigger chồng nhau
        + Không thể nhận tham số
    - Khi nào nên sử dụng Trigger?
        + Tự động ghi log thay đổi dữ liệu
        + Ràng buộc dữ liệu tự động
        + Kích hoạt các hành động tự động
Điểm giống giữa Stored procedure và Trigger 
    + Đều chứa các lệnh SQL để thao tác với dữ liệu.
    + Đều có thể thực hiện nhiều thao tác cùng lúc.
    + Đều hỗ trợ ROLLBACK khi có lỗi.
Điểm khác nhau giữa Stored procedure và Trigger 
    + Stored Procedure: Chủ động, phải gọi thủ công
    + Trigger: Bị động, tự động chạy khi có INSERT, UPDATE, DELETE.
    + Stored Procedure có thể nhận tham số & trả về kết quả, còn Trigger thì không.
    + Trigger khó debug hơn vì chạy tự động.
Transaction Trong SQL:
    TRANSACTION trong SQL là tiến trình thực hiện một nhóm các câu lệnh SQL các câu lệnh này được thực thi theo một cách tuần tự và độc lập. 
    Khi một Transaction được thực hiện thành công khi đó tất cả các thay đổi dữ liệu được thực hiện trong Transaction được lưu vào cơ sở dữ liệu.
    Nhưng nếu chỉ một trong số đó thất bại thì toàn bộ tiến trình sẽ thất bại, đồng nghĩa với việc dữ liệu phải rollback về trạng thái ban đầu
    -  Xử lý trong Transaction có các câu lệnh 
        + COMMIT: để lưu các thay đổi
        + ROLLBACK: để quay trở lại trạng thái trước khi có thay đổi.
        + SAVEPOINT: tạo các điểm bên trong các nhóm Transaction để ROLLBACK, tức là để quay trở lại điểm trạng thái đó.
        + SET TRANSACTION: đặt một tên cho một Transaction.
    - Khi nào cần sử dụng Transaction.
        + Khi có nguy cơ xảy ra lỗi trong quá trình xử lý VD: nếu khi mình đặt hàng bị lỗi thì nó sẽ hoàn tác lại 
        + Khi có nhiều thao tác SQL liên quan nhau VD: khi đặt hàng có một bước lỗi thì nó sẽ hoàn tác tất cả
    - Nhược điểm :   + Hiệu suất chậm
                    + Tiêu tốn tài nguyên
                    + Dễ gây Deadlock
                    + Phức tạp trong lập trình
    - Tổng kết lại
        + Lệnh Commit để lưu những thay đổi sau khi Transaction đã hoàn thành.
        + Lệnh Rollback là để quay lại những điểm SAVEPOINT hoặc là quay lại trạng thái trước khi TranSaction được thực hiện nếu có bất kỳ một lệnh bị lỗi.
        + SAVEPOINT là tạo ra các điểm lưu trữ tại thời điểm nào đó. 
        + RELEASE SAVEPOINT là xóa SAVEPOINT mà ta không muốn giữ.
        + SET TRANSACTION là quy định các đặc tính cho Transaction đó được đọc